plugins {
	id 'org.springframework.boot' version '2.4.12'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'war'

group = 'ap.ps'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.4")
}

dependencies {
	//Security
	implementation 'org.springframework.security.oauth:spring-security-oauth2:2.5.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-taglibs'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.10.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'mysql:mysql-connector-java'
	//Logging
	implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	// logstash
	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

	//JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'dev.akkinoc.util', name: 'yaml-resource-bundle', version: '2.0.2'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

processResources {
	dependsOn "copyAndChangeFile"
}

task copyAndChangeFile(type: Copy) {
	from 'build/libs' //대상
	into '/Users/wonyoungahn/docker/MSA/auth/build/' //복사할 곳
}

test {
	useJUnitPlatform()
}
